// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240516175112_login-roles")]
    partial class loginroles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("API.Entities.CartItem", b =>
                {
                    b.Property<string>("KrepselioSkelbimoNr")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Kiekis")
                        .HasColumnType("int");

                    b.Property<string>("KrepselioNr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SkelbimoNr")
                        .HasColumnType("int");

                    b.Property<DateTime>("SukurimoData")
                        .HasColumnType("datetime(6)");

                    b.HasKey("KrepselioSkelbimoNr");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("API.Entities.Poster", b =>
                {
                    b.Property<int>("SkelbimoNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SkelbimoNr"));

                    b.Property<string>("Aprasas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GyvunuKategorija")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Ivertinimas")
                        .HasColumnType("int");

                    b.Property<decimal>("Kaina")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Kiekis")
                        .HasColumnType("int");

                    b.Property<string>("Nuotrauka")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pavadinimas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SkelbimoValidacija")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("SkelbimoNr");

                    b.ToTable("Posters");
                });

            modelBuilder.Entity("API.Entities.Product", b =>
                {
                    b.Property<int>("ProduktoNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProduktoNr"));

                    b.Property<string>("Kategorija")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Kiekis")
                        .HasColumnType("int");

                    b.Property<string>("Pavadinimas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tiekejas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProduktoNr");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("API.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API.Entities.Wish", b =>
                {
                    b.Property<int>("NoroNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("NoroNr"));

                    b.Property<string>("Kategorija")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Kiekis")
                        .HasColumnType("int");

                    b.Property<string>("ProduktoPavadinimas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tiekejas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("NoroNr");

                    b.ToTable("Wishes");
                });
#pragma warning restore 612, 618
        }
    }
}
